# Form implementation generated from reading ui file 'ThongKe.ui'
#
# Created by: PyQt6 UI code generator 6.7.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.
import mplcursors
from PyQt6.QtGui import QStandardItemModel
from PyQt6.QtWidgets import QMessageBox, QVBoxLayout
import Dataconnection
from PyQt6 import QtCore, QtGui, QtWidgets
from matplotlib.backends.backend_qt5agg import FigureCanvasQTAgg as FigureCanvas
from matplotlib.figure import Figure
import sys
from datetime import datetime
import mplcursors
class MplCanvas(FigureCanvas):

    def __init__(self, parent=None, width=5, height=4, dpi=100):
        fig = Figure(figsize=(width, height), dpi=dpi)
        self.axes = fig.add_subplot(111)
        super(MplCanvas, self).__init__(fig)

class Ui_ThongKeDialog(object):
    def setupUi(self, Dialog):
        Dialog.setObjectName("Dialog")
        Dialog.resize(1471, 603)
        self.pushButton_6 = QtWidgets.QPushButton(parent=Dialog)
        self.pushButton_6.setGeometry(QtCore.QRect(0, 220, 121, 20))
        self.pushButton_6.setStyleSheet("background-color: rgb(170, 255, 255);")
        self.pushButton_6.setObjectName("pushButton_6")
        self.label_2 = QtWidgets.QLabel(parent=Dialog)
        self.label_2.setGeometry(QtCore.QRect(560, 20, 491, 51))
        font = QtGui.QFont()
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.pushButton_10 = QtWidgets.QPushButton(parent=Dialog)
        self.pushButton_10.setGeometry(QtCore.QRect(0, 190, 121, 20))
        self.pushButton_10.setStyleSheet("background-color: rgb(170, 255, 255);")
        self.pushButton_10.setObjectName("pushButton_10")
        self.listWidget_4 = QtWidgets.QListWidget(parent=Dialog)
        self.listWidget_4.setGeometry(QtCore.QRect(120, 0, 1351, 91))
        self.listWidget_4.setStyleSheet("background-color: rgb(85, 255, 255);\n"
"background-color: rgb(170, 170, 127);")
        self.listWidget_4.setObjectName("listWidget_4")
        self.pushButton_12 = QtWidgets.QPushButton(parent=Dialog)
        self.pushButton_12.setGeometry(QtCore.QRect(0, 310, 121, 20))
        self.pushButton_12.setStyleSheet("background-color: rgb(170, 255, 255);")
        self.pushButton_12.setObjectName("pushButton_12")
        self.frame = QtWidgets.QFrame(parent=Dialog)
        self.frame.setGeometry(QtCore.QRect(120, 90, 1351, 521))
        self.frame.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.frame.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.frame.setObjectName("frame")
        self.label = QtWidgets.QLabel(parent=self.frame)
        self.label.setGeometry(QtCore.QRect(260, 0, 231, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.label_3 = QtWidgets.QLabel(parent=self.frame)
        self.label_3.setGeometry(QtCore.QRect(30, 50, 111, 31))
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(parent=self.frame)
        self.label_4.setGeometry(QtCore.QRect(30, 100, 91, 21))
        self.label_4.setObjectName("label_4")
        self.frame_2 = QtWidgets.QFrame(parent=self.frame)
        self.frame_2.setGeometry(QtCore.QRect(0, 140, 671, 80))
        self.frame_2.setStyleSheet("background-color: rgb(170, 255, 255);")
        self.frame_2.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.frame_2.setObjectName("frame_2")
        self.label_5 = QtWidgets.QLabel(parent=self.frame_2)
        self.label_5.setGeometry(QtCore.QRect(250, 0, 281, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_5.setFont(font)
        self.label_5.setObjectName("label_5")
        self.label_6 = QtWidgets.QLabel(parent=self.frame_2)
        self.label_6.setGeometry(QtCore.QRect(20, 60, 181, 16))
        self.label_6.setObjectName("label_6")
        self.txtTongLuongNhanVien = QtWidgets.QLabel(parent=self.frame_2)
        self.txtTongLuongNhanVien.setGeometry(QtCore.QRect(240, 60, 70, 13))
        self.txtTongLuongNhanVien.setObjectName("txtTongLuongNhanVien")

        self.txtTongLuongNhanVien_1 = QtWidgets.QLabel(parent=self.frame_2)
        self.txtTongLuongNhanVien_1.setGeometry(QtCore.QRect(355, 60, 35, 13))
        self.txtTongLuongNhanVien_1.setObjectName("txtTongLuongNhanVien_1")

        self.label_7 = QtWidgets.QLabel(parent=self.frame)
        self.label_7.setGeometry(QtCore.QRect(260, 220, 201, 31))
        self.label_7.setStyleSheet("font: 75 11pt \"MS Shell Dlg 2\";")
        self.label_7.setObjectName("label_7")
        self.btnTinhTongDoanhThuTheoThang = QtWidgets.QPushButton(parent=self.frame)
        self.btnTinhTongDoanhThuTheoThang.setGeometry(QtCore.QRect(500, 50, 161, 23))
        self.btnTinhTongDoanhThuTheoThang.setObjectName("btnTinhTongDoanhThuTheoThang")
        self.dateEditDoanhThuTheoThang = QtWidgets.QDateEdit(parent=self.frame)
        self.dateEditDoanhThuTheoThang.setGeometry(QtCore.QRect(160, 50, 151, 22))
        self.dateEditDoanhThuTheoThang.setObjectName("dateEditDoanhThuTheoThang")
        self.txtTongDoanhThu = QtWidgets.QLabel(parent=self.frame)
        self.txtTongDoanhThu.setGeometry(QtCore.QRect(150, 100, 60, 13))
        self.txtTongDoanhThu.setObjectName("txtTongDoanhThu")

        self.txtTongDoanhThu_1 = QtWidgets.QLabel(parent=self.frame)
        self.txtTongDoanhThu_1.setGeometry(QtCore.QRect(250, 100, 47, 13))
        self.txtTongDoanhThu_1.setObjectName("txtTongDoanhThu")

        self.radioButton_Thang = QtWidgets.QRadioButton(parent=self.frame)
        self.radioButton_Thang.setGeometry(QtCore.QRect(330, 50, 82, 17))
        self.radioButton_Thang.setObjectName("radioButton_Thang")
        self.radioButton_Ngay = QtWidgets.QRadioButton(parent=self.frame)
        self.radioButton_Ngay.setGeometry(QtCore.QRect(400, 50, 82, 17))
        self.radioButton_Ngay.setObjectName("radioButton_Ngay")
        self.tableView = QtWidgets.QTableView(parent=self.frame)
        self.tableView.setGeometry(QtCore.QRect(10, 330, 651, 181))
        self.tableView.setObjectName("tableView")
        self.groupBox = QtWidgets.QGroupBox(parent=self.frame)
        self.groupBox.setGeometry(QtCore.QRect(9, 249, 661, 71))
        self.groupBox.setObjectName("groupBox")
        self.label_8 = QtWidgets.QLabel(parent=self.groupBox)
        self.label_8.setGeometry(QtCore.QRect(20, 40, 47, 13))
        self.label_8.setObjectName("label_8")
        self.label_9 = QtWidgets.QLabel(parent=self.groupBox)
        self.label_9.setGeometry(QtCore.QRect(270, 40, 47, 13))
        self.label_9.setObjectName("label_9")
        self.dateEdit_TuNgay = QtWidgets.QDateEdit(parent=self.groupBox)
        self.dateEdit_TuNgay.setGeometry(QtCore.QRect(90, 40, 151, 22))
        self.dateEdit_TuNgay.setObjectName("dateEdit_TuNgay")
        self.dateEdit_DenNgay = QtWidgets.QDateEdit(parent=self.groupBox)
        self.dateEdit_DenNgay.setGeometry(QtCore.QRect(330, 40, 151, 21))
        self.dateEdit_DenNgay.setObjectName("dateEdit_DenNgay")
        self.btnTraCuuGiaoDich = QtWidgets.QPushButton(parent=self.groupBox)
        self.btnTraCuuGiaoDich.setGeometry(QtCore.QRect(530, 40, 75, 23))
        self.btnTraCuuGiaoDich.setObjectName("btnTraCuuGiaoDich")
        self.label_10 = QtWidgets.QLabel(parent=self.frame)
        self.label_10.setGeometry(QtCore.QRect(780, 40, 121, 16))
        self.label_10.setObjectName("label_10")
        self.label_11 = QtWidgets.QLabel(parent=self.frame)
        self.label_11.setGeometry(QtCore.QRect(970, 40, 131, 16))
        self.label_11.setObjectName("label_11")
        self.label_12 = QtWidgets.QLabel(parent=self.frame)
        self.label_12.setGeometry(QtCore.QRect(1160, 40, 151, 16))
        self.label_12.setObjectName("label_12")
        self.btnHienThiTongThuCung = QtWidgets.QPushButton(parent=self.frame)
        self.btnHienThiTongThuCung.setGeometry(QtCore.QRect(770, 80, 131, 31))
        self.btnHienThiTongThuCung.setStyleSheet("background-color: rgb(85, 255, 255);\n"
"font: 75 9pt \"MS Shell Dlg 2\";")
        self.btnHienThiTongThuCung.setText("")
        self.btnHienThiTongThuCung.setObjectName("btnHienThiTongThuCung")
        self.btlHienThiTongNhanVien = QtWidgets.QPushButton(parent=self.frame)
        self.btlHienThiTongNhanVien.setGeometry(QtCore.QRect(960, 80, 131, 31))
        self.btlHienThiTongNhanVien.setStyleSheet("background-color: rgb(85, 255, 255);\n"
"font: 75 9pt \"MS Shell Dlg 2\";")
        self.btlHienThiTongNhanVien.setText("")
        self.btlHienThiTongNhanVien.setObjectName("btlHienThiTongNhanVien")
        self.btnHienThiNhaCungCap = QtWidgets.QPushButton(parent=self.frame)
        self.btnHienThiNhaCungCap.setGeometry(QtCore.QRect(1160, 80, 131, 31))
        self.btnHienThiNhaCungCap.setStyleSheet("background-color: rgb(85, 255, 255);\n"
"font: 75 9pt \"MS Shell Dlg 2\";")
        self.btnHienThiNhaCungCap.setText("")
        self.btnHienThiNhaCungCap.setObjectName("btnHienThiNhaCungCap")
        self.label_13 = QtWidgets.QLabel(parent=self.frame)
        self.label_13.setGeometry(QtCore.QRect(860, 150, 361, 31))
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.label_13.setFont(font)
        self.label_13.setObjectName("label_13")
        self.frame_BieuDoDoanhThu = QtWidgets.QFrame(parent=self.frame)
        self.frame_BieuDoDoanhThu.setGeometry(QtCore.QRect(670, 180, 681, 331))
        self.frame_BieuDoDoanhThu.setFrameShape(QtWidgets.QFrame.Shape.Box)
        self.frame_BieuDoDoanhThu.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.frame_BieuDoDoanhThu.setObjectName("frame_BieuDoDoanhThu")
        self.pushButton_13 = QtWidgets.QPushButton(parent=Dialog)
        self.pushButton_13.setGeometry(QtCore.QRect(0, 250, 121, 20))
        self.pushButton_13.setStyleSheet("background-color: rgb(170, 255, 255);")
        self.pushButton_13.setObjectName("pushButton_13")
        self.listWidget_3 = QtWidgets.QListWidget(parent=Dialog)
        self.listWidget_3.setGeometry(QtCore.QRect(0, 0, 121, 611))
        self.listWidget_3.setStyleSheet("background-color: rgb(85, 255, 255);\n"
"background-color: rgb(170, 170, 127);")
        self.listWidget_3.setObjectName("listWidget_3")
        self.pushButton_11 = QtWidgets.QPushButton(parent=Dialog)
        self.pushButton_11.setGeometry(QtCore.QRect(0, 280, 121, 20))
        self.pushButton_11.setStyleSheet("background-color: rgb(170, 255, 255);")
        self.pushButton_11.setObjectName("pushButton_11")
        self.pushButton_9 = QtWidgets.QPushButton(parent=Dialog)
        self.pushButton_9.setGeometry(QtCore.QRect(0, 160, 121, 20))
        self.pushButton_9.setStyleSheet("background-color: rgb(170, 255, 255);")
        self.pushButton_9.setObjectName("pushButton_9")
        self.listWidget_3.raise_()
        self.listWidget_4.raise_()
        self.pushButton_6.raise_()
        self.label_2.raise_()
        self.pushButton_10.raise_()
        self.pushButton_12.raise_()
        self.frame.raise_()
        self.pushButton_13.raise_()
        self.pushButton_11.raise_()
        self.pushButton_9.raise_()

        self.retranslateUi(Dialog)
        QtCore.QMetaObject.connectSlotsByName(Dialog)
        self.giaodich = QStandardItemModel()
        self.tableView.setModel(self.giaodich)
        header = self.tableView.horizontalHeader()
        header.setSectionResizeMode(QtWidgets.QHeaderView.ResizeMode.Stretch)

        # Create a layout for the frame
        layout = QVBoxLayout(self.frame_BieuDoDoanhThu)

        # Create a Matplotlib canvas and add it to the layout
        self.canvas = MplCanvas(self.frame_BieuDoDoanhThu, width=8, height=6, dpi=80)
        layout.addWidget(self.canvas)

        self.draw_revenue_bar_chart()

        self.dateEdit_TuNgay.setDate(QtCore.QDate.currentDate())
        self.dateEdit_DenNgay.setDate(QtCore.QDate.currentDate())
        self.dateEditDoanhThuTheoThang.setDate(QtCore.QDate.currentDate())
        self.dateEdit_DenNgay.setDate(QtCore.QDate.currentDate())
        self.btnTraCuuGiaoDich.clicked.connect(self.TraSoatLichSu)
        self.btnTinhTongDoanhThuTheoThang.clicked.connect(self.doanhthungaythang)
        self.Luong_NhanVien()
        self.LichSu()
        self.calculate_total_employees()
        self.total_ThuCung()
        self.total_NhaCungCap()
    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "Dialog"))
        self.pushButton_6.setText(_translate("Dialog", "SẢN PHẨM"))
        self.label_2.setText(_translate("Dialog", "QUẢN LÝ CỬA HÀNG THÚ CƯNG"))
        self.pushButton_10.setText(_translate("Dialog", "NHÂN VIÊN"))
        self.pushButton_12.setText(_translate("Dialog", "THỐNG KÊ"))
        self.label.setText(_translate("Dialog", "Thống Kê Doanh Thu"))
        self.label_3.setText(_translate("Dialog", "Nhập Ngày/Tháng"))
        self.label_4.setText(_translate("Dialog", "<html><head/><body><p>Tổng Tiền:</p></body></html>"))
        self.label_5.setText(_translate("Dialog", "Thống Kê Lương Nhân Viên"))
        self.label_6.setText(_translate("Dialog", "<html><head/><body><p>Tổng Tiền Lương Của Nhân Viên:</p></body></html>"))
        self.txtTongLuongNhanVien.setText(_translate("Dialog", "0"))
        self.txtTongLuongNhanVien_1.setText(_translate("Dialog", " VND"))
        self.label_7.setText(_translate("Dialog", "Tra Cứu Lịch Sử Giao Dịch"))
        self.btnTinhTongDoanhThuTheoThang.setText(_translate("Dialog", "Tính Tổng Doanh Thu"))
        self.txtTongDoanhThu.setText(_translate("Dialog", "0 "))
        self.txtTongDoanhThu_1.setText(_translate("Dialog", " VND"))
        self.radioButton_Thang.setText(_translate("Dialog", "Tháng"))
        self.radioButton_Ngay.setText(_translate("Dialog", "Ngày"))
        self.groupBox.setTitle(_translate("Dialog", "Yêu cầu nhập đầy đủ từ ngày đến ngày"))
        self.label_8.setText(_translate("Dialog", "Từ ngày"))
        self.label_9.setText(_translate("Dialog", "Đến ngày"))
        self.btnTraCuuGiaoDich.setText(_translate("Dialog", "Tra Cứu"))
        self.label_10.setText(_translate("Dialog", "TỔNG SỐ THÚ CƯNG"))
        self.label_11.setText(_translate("Dialog", "TỔNG SỐ NHÂN VIÊN"))
        self.label_12.setText(_translate("Dialog", "TỔNG SỐ NHÀ CUNG CẤP"))
        self.label_13.setText(_translate("Dialog", "BIỂU ĐỒ  DOANH THU THEO THÁNG"))
        self.pushButton_13.setText(_translate("Dialog", "NHÀ CUNG CẤP"))
        self.pushButton_11.setText(_translate("Dialog", "CHI TIẾT HÓA ĐƠN"))
        self.pushButton_9.setText(_translate("Dialog", "BÁN HÀNG"))

        # show lịch sử giao dịch

        # Tiền lương nhân viên

    def fetch_revenue_data(self):
        # Replace these with your actual database connection details

        connection = Dataconnection.connectdatabase()
        cursor = connection.cursor()

        query = """
        SELECT 
            MONTH(NgayLap) as Month, 
            SUM(TongTien) as TotalRevenue 
        FROM HoaDon 
        GROUP BY MONTH(NgayLap)
        ORDER BY MONTH(NgayLap);
        """
        cursor.execute(query)
        result = cursor.fetchall()

        cursor.close()
        connection.close()

        return result

    def draw_revenue_bar_chart(self):
        data = self.fetch_revenue_data()

        # Process the data
        months = [datetime(2000, month, 1).strftime('%B') for month, _ in data]
        total_revenue = [revenue for _, revenue in data]

        self.canvas.axes.clear()
        bars = self.canvas.axes.bar(months, total_revenue)
        self.canvas.axes.set_title('Monthly Total Revenue')
        self.canvas.axes.set_xlabel('Month')
        self.canvas.axes.set_ylabel('Total Revenue')
        self.canvas.draw()

        # Add interactive hover functionality
        cursor = mplcursors.cursor(bars)
        cursor.connect("add", lambda sel: sel.annotation.set_text(f'{sel.target[1]:.2f}'))
    def Luong_NhanVien(self):
        # Connect to the database and retrieve salary data
        connection = Dataconnection.connectdatabase()
        cursor = connection.cursor()
        cursor.execute("SELECT SUM(Luong) FROM nhanvien")
        result = cursor.fetchone()
        tong_luong = result[0] if result[0] is not None else 0
        connection.close()

        # Update the label with the total salary
        self.txtTongLuongNhanVien.setText(f"{tong_luong:,.0f} ")
    def doanhthungaythang(self):
        # Kết nối đến cơ sở dữ liệu
        connection = Dataconnection.connectdatabase()
        cursor = connection.cursor()

        # Kiểm tra lựa chọn của người dùng và xây dựng câu truy vấn phù hợp
        if self.radioButton_Thang.isChecked():
            # Trường hợp chọn tháng
            ngay_thang = self.dateEditDoanhThuTheoThang.date().toString('yyyy-MM')
            query = """
                SELECT SUM(TongTien) 
                FROM HoaDon 
                WHERE DATE_FORMAT(NgayLap, '%Y-%m') = %s;
                """
            cursor.execute(query, (ngay_thang,))
        elif self.radioButton_Ngay.isChecked():
            # Trường hợp chọn ngày
            ngay_thang = self.dateEditDoanhThuTheoThang.date().toString('yyyy-MM-dd')
            query = """
                SELECT SUM(TongTien) 
                FROM HoaDon 
                WHERE DATE(NgayLap) = %s;
                """
            cursor.execute(query, (ngay_thang,))
        else:
            # Trường hợp không chọn gì
            query = """
                SELECT SUM(TongTien) 
                FROM HoaDon;
                """
            cursor.execute(query)
        # Lấy kết quả và hiển thị
        result = cursor.fetchone()

        if result[0] is not None:
            self.txtTongDoanhThu.setText(str(result[0]))
        else:
            self.txtTongDoanhThu.setText('0')

        # Đóng kết nối
        cursor.close()
        connection.close()

    def fetch_revenue_data(self):
        # Replace these with your actual database connection details

        connection = Dataconnection.connectdatabase()
        cursor = connection.cursor()

        query = """
            SELECT 
                MONTH(NgayLap) as Month, 
                SUM(TongTien) as TotalRevenue 
            FROM HoaDon 
            GROUP BY MONTH(NgayLap)
            ORDER BY MONTH(NgayLap);
            """
        cursor.execute(query)
        result = cursor.fetchall()

        cursor.close()
        connection.close()

        return result
    def LichSu(self):
        connection = Dataconnection.connectdatabase()
        if connection:
            cursor = connection.cursor()
            cursor.execute("SELECT * FROM HoaDon")
            records = cursor.fetchall()
            if records:
                headers = ['MaHD', 'MaNV', 'NgayLap', 'TongTien']
                self.giaodich.setHorizontalHeaderLabels(headers)
                for row in records:
                    items = [QtGui.QStandardItem(str(field)) for field in row]
                    self.giaodich.appendRow(items)
            cursor.close()
            Dataconnection.close_connection(connection)

    def TraSoatLichSu(self):
        # Lấy ngày bắt đầu và ngày kết thúc từ dateEdit
        tu_ngay = self.dateEdit_TuNgay.date().toPyDate()
        den_ngay = self.dateEdit_DenNgay.date().toPyDate()
        if tu_ngay > den_ngay:
            msg = QMessageBox()
            msg.setIcon(QMessageBox.Icon.Warning)
            msg.setText("Ngày bắt đầu phải nhỏ hơn hoặc bằng ngày kết thúc.")
            msg.setWindowTitle("Lỗi")
            msg.exec()
            return
        # Kết nối CSDL và thực hiện truy vấn
        connection = Dataconnection.connectdatabase()
        if connection:
            cursor = connection.cursor()
            # Truy vấn lịch sử giao dịch trong khoảng thời gian từ ngày đến ngày
            cursor.execute("SELECT * FROM HoaDon WHERE NgayLap BETWEEN %s AND %s", (tu_ngay, den_ngay))
            records = cursor.fetchall()
            if records:
                headers = ['MaHD', 'MaNV', 'NgayLap', 'TongTien']
                self.giaodich.clear()  # Xóa dữ liệu cũ trong table view
                self.giaodich.setHorizontalHeaderLabels(headers)
                for row in records:
                    items = [QtGui.QStandardItem(str(field)) for field in row]
                    self.giaodich.appendRow(items)
            cursor.close()
            Dataconnection.close_connection(connection)
    def total_NhaCungCap(self):
        connection = Dataconnection.connectdatabase()
        total_ncc = 0
        if connection:
                cursor = connection.cursor()
                cursor.execute("SELECT COUNT(*) FROM NhaCungCap")
                total_ncc = cursor.fetchone()
                tncc = total_ncc[0] if total_ncc[0] is not None else 0
                connection.close()
                self.btnHienThiNhaCungCap.setText(f"{tncc}")
    def total_ThuCung(self):
        connection = Dataconnection.connectdatabase()
        total_ns = 0
        if connection:
                cursor = connection.cursor()
                cursor.execute("SELECT COUNT(*) FROM SanPham")
                total_ns = cursor.fetchone()
                tns = total_ns[0] if total_ns[0] is not None else 0
                connection.close()
                self.btnHienThiTongThuCung.setText(f"{tns}")
    def calculate_total_employees(self):
        connection = Dataconnection.connectdatabase()
        total_employees = 0
        if connection:
            cursor = connection.cursor()
            cursor.execute("SELECT COUNT(*) FROM NhanVien")
            total_employees = cursor.fetchone()
            tnv = total_employees[0] if total_employees[0] is not None else 0
            connection.close()
            self.btlHienThiTongNhanVien.setText(f"{tnv}")


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Dialog = QtWidgets.QDialog()
    ui = Ui_ThongKeDialog()
    ui.setupUi(Dialog)
    Dialog.show()
    sys.exit(app.exec())
